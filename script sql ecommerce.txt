-- Criação do banco de dados para o cenário de E-Commerce

create database ecommerce_final;
-- drop database ecommerce_final;
use ecommerce_final;

-- criar tabela cliente
create table clients(
	idClient int auto_increment primary key,
    idPayment int,
    Fname varchar(10),
    Minit char (3),
    Lname varchar(20),
    Address varchar(255)
);

-- alter table clients add constraint fk_client_payments foreign key (idPayment) references payments(idPayment);
alter table clients auto_increment=1;

-- crair tabela pessoa física
create table pessoafisica(
	idPessoaFisica int auto_increment primary key,
    idClient int,
    CPF char(11) not null,
	constraint unique_cpf_client unique(CPF),
    constraint fk_pessoafisica_client foreign key (idClient) references clients(idClient)
);

-- criar tabela pessoa jurídica
create table pessoajuridica(
	idPessoaJuridica int auto_increment primary key,
    idClient int,
    CNPJ char(15) not null,
	constraint unique_cnpj_client unique(CNPJ),
    constraint fk_pessoajuridica_client foreign key (idClient) references clients(idClient)
);

-- criar tabela produto
-- size - dimensão do produto
create table product(
	idProduct int auto_increment,
    Pname varchar(255) not null,
	classification_kids bool default false,
    category enum('Eletrônico', 'Vestimenta', 'Brinquedos', 'Alimentos', 'Móveis') not null,
    avaliacao float default 0,
    size varchar(10),
    constraint pk_product primary key (idProduct)
);

-- criar tabela pagamentos
create table payments(
	idPayment int,
    idClient int,
    typePayment enum('Boleto', 'Cartão', 'Dois cartões'),
    limitAvailable float,
    primary key (idClient, idPayment),
    constraint fk_payment_client foreign key (idClient) references clients(idClient)
);

-- criar tabela pedido
create table orders(
	idOrder int auto_increment primary key,
    idOrderFisica int,
    idOrderJuridica int,
    idEntrega int,
    orderStatus enum('Cancelado', 'Confirmado', 'Em processamento') not null,
    orderDescription varchar(255),
    sendValue float default 10,
    paymentCash bool default false,
    constraint fk_orders_pessoafisica foreign key (idOrderFisica) references pessoafisica(idPessoaFisica),
    constraint fk_orders_pessoajuridica foreign key (idOrderJuridica) references pessoajuridica(idPessoaJuridica)
);

alter table orders add constraint fk_orders_entrega foreign key (idEntrega) references entrega(idEntrega);

-- criar tabela entrega
create table entrega(
	idEntrega int auto_increment primary key,
    statusEntrega bool default 0,
    codigoRastreio varchar(255)
);

-- criar tabela estoque
create table productStorage(
	idProdStorage int auto_increment primary key,
    storageLocation varchar(255),
    quantity int default 0
);

-- criar tabela fornecedor
create table supplier(
	idSupplier int auto_increment primary key,
    SocialName varchar(255) not null,
    CNPJ char(15) not null,
    contact char(11) not null,
    constraint unique_supplier unique (CNPJ)
);

-- criar tabela vendedor
create table seller(
	idSeller int auto_increment primary key,
    SocialName varchar(255) not null,
    AbstName varchar(255),
    CNPJ char(15),
    CPF char(11),
    location varchar(255),
    contact char(11) not null,
    constraint unique_cpnj_seller unique (CNPJ),
    constraint unique_cpf_seller unique (CPF)
);

-- criar estoque vendedor
create table productSeller(
	idPseller int,
    idProduct int,
    prodQuantity int default 1,
    primary key(idPseller, idProduct),
    constraint fk_product_seller foreign key (idPseller) references seller(idSeller),
    constraint fk_product_product foreign key (idProduct) references product(idProduct)
);

-- criar tabela status produto
create table productOrder(
	idPOproduct int,
    idPOorder int,
    poQuantity int default 1,
    poStatus enum('Disponível', 'Sem estoque') default 'Disponível',
    primary key(idPOproduct, idPOorder),
    constraint fk_productorder_seller foreign key (idPOproduct) references product(idProduct),
    constraint fk_productorder_product foreign key (idPOorder) references orders(idOrder)
);

-- criar tabela localização estoque
create table storageLocation(
	idLproduct int,
    idLstorage int,
    location varchar(255) not null,
    primary key(idLproduct, idLstorage),
    constraint fk_storage_location_product foreign key (idLproduct) references product(idProduct),
    constraint fk_storage_location_storage foreign key (idLstorage) references productStorage(idProdStorage)
);

-- criar tabela estoque fornecedor
create table productSupplier(
	idPsSupplier int,
    idPsProduct int,
    quantity int not null,
    primary key (idPsSupplier, idPsProduct),
    constraint fk_product_supplier_supplier foreign key (idPsSupplier) references supplier(idSupplier),
    constraint fk_product_supplier_product foreign key (idPsProduct) references product(idProduct)
);

show tables;

-- inserção de dados e queries

use ecommerce_final;
select * from clients;
show tables;

insert into Clients (Fname, Minit, Lname, CPF, Address)
	values ('Maria', 'M', 'Silva', 123456789, 'rua silva de prata 29, Carangola - Cidade das flores'),
		   ('Matheus', 'O', 'Pimentel', 987654321, 'rua alemeda 289, Centro - Cidade das flores'),
           ('Ricardo', 'F', 'Silva', 45678913, 'avenida alemeda vinha 1009, Centro - Cidade das flores'),
           ('Julia', 'S', 'França', 789123456, 'rua lareijras 861, Centro - Cidade das flores'),
           ('Roberta', 'G', 'Assis', 98745631, 'avenida koller 19, Centro - Cidade das flores'),
           ('Isabela', 'M', 'Cruz', 654789123, 'rua alemeda das flores 28, Centro - Cidade das flores');
           
insert into product (Pname, classification_kids, category, avaliacao, size) 
	values ('Fone de ouvido', false, 'Eletrônico', '4', null),
		   ('Barbie Elsa', true, 'Brinquedos', '3', null),
           ('Body Carters', true, 'Vestimenta', '5', null),
           ('Microfone Vedo - Youtuber', false, 'Eletrônico', '4', null),
           ('Sofá retrátil', false, 'Móveis', '3', '3x57x80'),
           ('Farinha de arroz', false, 'Alimentos', '2', null),
           ('Fire Stick Amazon', false, 'Eletrônico', '5', null);
           
insert into orders (idOrderClient, orderStatus, orderDescription, sendValue, paymentCash) 
	values (1, default, 'compra via aplicativo', null, 1),
		   (2, default, 'compra via aplicativo', 50, 0),
           (3, 'Confirmado', null, null, 1),
           (4, default, 'compra via web site', 150, 0);
           
insert into productOrder (idPOproduct, idPOorder, poQuantity, poStatus) 
	values (1,1,2,null),
		   (2,1,1,null),
           (3,2,1,null);
           
insert into productStorage (storageLocation, quantity) 
	values ('Rio de Janeiro', 1000),
		   ('Rio de Janeiro', 500),
           ('São Paulo', 10),
           ('São Paulo', 100),
           ('São Paulo', 10),
           ('Brasília', 60);
           
insert into storageLocation (idLproduct, idLstorage, location) 
	values (1,2,'RJ'),
           (2,6,'GO');
           
insert into supplier (SocialName, CNPJ, contact) 
	values ('Almeida e filhos', 123456789123456, '21985474'),
		   ('Eletrônicos Silva', 854519649143457, '21985484'),
           ('Eletrônicos Valma', 934567893934695, '21975474');
           
insert into productSupplier (idPsSupplier, idPsProduct, quantity) 
	values (1,1,500),
		   (1,2,400),
           (2,4,633),
           (3,3,5),
           (2,5,10);
           
insert into seller (SocialName, AbstName, CNPJ, CPF, location, contact) 
	values ('lech electronics', null, 123456789456321, null, 'Rio de Janeiro', '219946287'),
		   ('Botique Durgas', null, 123456783, null, 'Rio de Janeiro', '2195677895'),
           ('Kids World', null, 987654321123456, null, 'São Paulo', '1198657484');
           
insert into productSeller (idPseller, idProduct, prodQuantity) 
	values (1,6,80),
		   (2,7,10);
		
insert into payments (idClient, idPayment, typePayment, limitAvailable)
			values (1, 1, 'Boleto', 100),
				   (2, 2, 'Cartão', 200),
                   (3, 3, 'Dois cartões', 2000);

-- Inserir dados na tabela clients
INSERT INTO clients (idClient, idPayment, Fname, Minit, Lname, Address)
VALUES 
(1, 1, 'João', 'A', 'Silva', 'Rua A, 123'),
(2, 2, 'Maria', 'B', 'Santos', 'Rua B, 456'),
(3, 3, 'Carlos', 'C', 'Oliveira', 'Rua C, 789');

-- Atualizar idClient em payments após inserção de clients
UPDATE payments SET idClient = 1 WHERE idPayment = 1;
UPDATE payments SET idClient = 2 WHERE idPayment = 2;
UPDATE payments SET idClient = 3 WHERE idPayment = 3;

-- Inserir dados na tabela pessoafisica
INSERT INTO pessoafisica (idPessoaFisica, idClient, CPF)
VALUES 
(1, 1, '12345678901'),
(2, 2, '23456789012');

-- Inserir dados na tabela pessoajuridica
INSERT INTO pessoajuridica (idPessoaJuridica, idClient, CNPJ)
VALUES 
(1, 3, '12345678000199');

-- Inserir dados na tabela product
INSERT INTO product (idProduct, Pname, classification_kids, category, avaliacao, size)
VALUES 
(1, 'Smartphone', FALSE, 'Eletrônico', 4.5, '15cm'),
(2, 'Camiseta', FALSE, 'Vestimenta', 4.0, 'M'),
(3, 'Carrinho de brinquedo', TRUE, 'Brinquedos', 4.7, '30cm');

-- Inserir dados na tabela entrega
INSERT INTO entrega (idEntrega, statusEntrega, codigoRastreio)
VALUES 
(1, TRUE, 'BR123456'),
(2, FALSE, 'BR654321');

-- Inserir dados na tabela orders
INSERT INTO orders (idOrder, idOrderFisica, idOrderJuridica, idEntrega, orderStatus, orderDescription, sendValue, paymentCash)
VALUES 
(1, 1, NULL, 1, 'Confirmado', 'Pedido de João', 20.00, TRUE),
(2, NULL, 1, 2, 'Em processamento', 'Pedido de Empresa X', 30.00, FALSE);

-- Inserir dados na tabela productStorage
INSERT INTO productStorage (idProdStorage, storageLocation, quantity)
VALUES 
(1, 'Depósito A', 100),
(2, 'Depósito B', 200);

-- Inserir dados na tabela supplier
INSERT INTO supplier (idSupplier, SocialName, CNPJ, contact)
VALUES 
(1, 'Fornecedor X', '98765432000188', '11987654321');

-- Inserir dados na tabela seller
INSERT INTO seller (idSeller, SocialName, AbstName, CNPJ, CPF, location, contact)
VALUES 
(1, 'Vendedor Y', 'VendY', '76543210000177', NULL, 'Loja Central', '11976543210'),
(2, 'Vendedor Z', 'VendZ', NULL, '34567890123', 'Loja Norte', '11965432109');

-- Inserir dados na tabela productSeller
INSERT INTO productSeller (idPseller, idProduct, prodQuantity)
VALUES 
(1, 1, 10),
(1, 2, 20),
(2, 3, 15);

-- Inserir dados na tabela productOrder
INSERT INTO productOrder (idPOproduct, idPOorder, poQuantity, poStatus)
VALUES 
(1, 1, 2, 'Disponível'),
(2, 2, 1, 'Sem estoque');

-- Inserir dados na tabela storageLocation
INSERT INTO storageLocation (idLproduct, idLstorage, location)
VALUES 
(1, 1, 'Prateleira A'),
(2, 2, 'Prateleira B');

-- Inserir dados na tabela productSupplier
INSERT INTO productSupplier (idPsSupplier, idPsProduct, quantity)
VALUES 
(1, 1, 50),
(1, 2, 80);

            
select * from clients;
select * from orders;
select * from product;
select * from payments;
select * from supplier;
select * from seller;
select * from productOrder;
select * from productSeller;
select * from productSupplier;
select * from productStorage;
select * from storageLocation;

select idClient as Identificação, concat(Fname, ' ', Lname) as Nome_Cliente, orderStatus as Status_Pedido from clients c, orders o 
	where c.idClient = idOrderClient
    group by Nome_Cliente
    order by idClient;
    
select idClient as Identificação, concat(Fname, ' ', Lname) as Nome_Cliente, orderStatus as Status_Pedido from clients c, orders o 
	where c.idClient = idOrderClient
    group by Nome_Cliente
    having count(*) > 0
    order by idClient;
    
select s.SocialName as Fornecedor, s.contact as Contato, ps.idPsSupplier as Identificação_Produto from supplier as s join productSupplier as ps
	on s.idSupplier = ps.idPsSupplier
    group by SocialName;
    
select concat(Fname, ' ', Lname) as Nome_Cliente, count(*) as Número_de_Pedidos from clients, pessoafisica, pessoajuridica, orders
	where idPessoaFisica = idOrderFisica or idPessoaJuridica = idOrderJuridica;
    
select * from supplier, seller where idSupplier = idSeller;
